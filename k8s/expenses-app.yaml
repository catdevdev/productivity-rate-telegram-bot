apiVersion: apps/v1
kind: Deployment
metadata:
  name: expenses-repo-deployment
  labels:
    app: expenses-repo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: expenses-repo
  template:
    metadata:
      labels:
        app: expenses-repo
    spec:
      containers:
        - name: expenses-repo-container
          image: 014498641718.dkr.ecr.eu-north-1.amazonaws.com/expenses-repo:$CICD_GIT_COMMIT
          ports:
            - containerPort: 8000 # Define the port your app is listening on

---
apiVersion: v1
kind: Service
metadata:
  name: expenses-repo-service
  labels:
    app: expenses-repo
spec:
  type: LoadBalancer
  ports:
    - port: 80 # External port
      targetPort: 8000 # Port exposed by the container
  selector:
    app: expenses-repo
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: expenses-repo-ingress
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod" # Use the appropriate issuer
spec:
  tls:
    - hosts:
        - a13ea8f41ea70437593bd0c7b5bd767f-100097524.eu-north-1.elb.amazonaws.com
      secretName: expenses-repo-tls # Name of the secret to store SSL certs
  rules:
    - host: a13ea8f41ea70437593bd0c7b5bd767f-100097524.eu-north-1.elb.amazonaws.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: expenses-repo-service
                port:
                  number: 80
