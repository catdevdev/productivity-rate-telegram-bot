name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    environment: dev-aws
    runs-on: ubuntu-latest

    steps:
      - name: Set short git commit SHA
        id: commit
        uses: prompt/actions-commit-hash@v2

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get commit message
        id: commit-message
        run: echo "COMMIT_MESSAGE=$(git log -1 --pretty=format:'%s')" >> $GITHUB_ENV

      - name: Notify start of deployment via Telegram
        env:
          TELEGRAM_BOT_ID_DEV: ${{ secrets.TELEGRAM_BOT_ID_DEV }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          COMMIT_MESSAGE: ${{ env.COMMIT_MESSAGE }}
        run: |
          START_TIME=$(date +%s)
          echo "START_TIME=$START_TIME" >> $GITHUB_ENV
          START_MESSAGE="üöÄ Deployment process started for commit ID: ${{ steps.commit.outputs.short }}. Update: "$COMMIT_MESSAGE""
          curl -s -X POST https://api.telegram.org/bot${TELEGRAM_BOT_ID_DEV}/sendMessage -d chat_id=${TELEGRAM_CHAT_ID} -d text="$START_MESSAGE"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, Tag, and Push Docker Image
        env:
          CICD_GIT_COMMIT: ${{ steps.commit.outputs.short }}
        run: |
          docker build -t expenses-repo:latest ./finances
          docker tag expenses-repo:latest 014498641718.dkr.ecr.eu-north-1.amazonaws.com/expenses-repo:$CICD_GIT_COMMIT
          docker push 014498641718.dkr.ecr.eu-north-1.amazonaws.com/expenses-repo:$CICD_GIT_COMMIT

      - name: Update kube config
        run: aws eks update-kubeconfig --region eu-north-1 --name ex-eks

      - name: Deploy to EKS
        env:
          CICD_GIT_COMMIT: ${{ steps.commit.outputs.short }}
        run: |
          for f in ./k8s/*.yaml; do
            sed "s|\$CICD_GIT_COMMIT|${CICD_GIT_COMMIT}|g" "$f" | kubectl apply -f -
          done

      - name: Notify completion of deployment via Telegram
        env:
          TELEGRAM_BOT_ID_DEV: ${{ secrets.TELEGRAM_BOT_ID_DEV }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          END_TIME=$(date +%s)
          START_TIME=${{ env.START_TIME }}
          DURATION=$((END_TIME - START_TIME))
          END_MESSAGE="‚òëÔ∏è Deployment completed successfully for commit ID: ${{ steps.commit.outputs.short }}. Duration: ${DURATION} seconds."
          curl -s -X POST https://api.telegram.org/bot${TELEGRAM_BOT_ID_DEV}/sendMessage -d chat_id=${TELEGRAM_CHAT_ID} -d text="$END_MESSAGE"
